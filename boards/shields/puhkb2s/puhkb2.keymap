/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LF1 1
#define LF2 2
#define LF3 3
#define LF4 4
#define RF1 5
#define RF2 6
#define RF3 7
#define RF4 8
#define GAM 9
#define GAM2 10

/ {

	conditional_layers {
		compatible = "zmk,conditional-layers";
		lf4_layer {
			if-layers = <LF2 LF3>;
			then-layer = <LF4>;
		};
		rf4_layer {
			if-layers = <RF2 RF3>;
			then-layer = <RF4>;
        };
    };
    
	behaviors {
		td0: tap_dance_0 {
            		compatible = "zmk,behavior-tap-dance";
            		#binding-cells = <0>;
			tapping-term-ms = <500>;
            		bindings = <&kp KP_PLUS>, <&kp KP_MULTIPLY>;
        	};
        	td1: tap_dance_1 {
            		compatible = "zmk,behavior-tap-dance";
            		#binding-cells = <0>;
            		tapping-term-ms = <500>;
            		bindings = <&kp KP_MINUS>, <&kp KP_DIVIDE>;
        	};
		td2: tap_dance_2 {
            		compatible = "zmk,behavior-tap-dance";
            		#binding-cells = <0>;
            		tapping-term-ms = <500>;
            		bindings = <&kp KP_DOT>, <&kp COMMA>;
        	};
        	skq: sticky_key_quick_release {
        		compatible = "zmk,behavior-sticky-key";
        		#binding-cells = <1>;
        		bindings = <&kp>;
        		release-after-ms = <3000>;
        		quick-release;
        		ignore-modifiers;
      		};
    };
    
	keymap {
		compatible = "zmk,keymap";
        
		default_layer {
			display-name = "BASE";
// * BASE
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |   Q  |   W  |   E  |   R  |   T  |  (   |  )   |         |  =+  |   Y  |   U  |   I  |   O  |  ;:  | BSP  | DEL  |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | TAB  |   A  |   S  |   D  |   F  |   G  |  [{  |  ]}  |         |  -_  |   H  |   J  |   K  |   L  |  P   |  '"  | \|   |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |LShift|RShift|   Z  |   X  |   C  |   V  |   B  | ENT  |         | ENT  |  B   |   N  |   M  |  ,<  |  .>  |  /?  |RShift|         |  *   |  N1  |  N2  |  N3  |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL | LGUI | LAlt | LF3  | LF2  | SPC  | SPC  | LF1  |         | RF1  |Space |Space |  LF2 | LF3  | RAlt | RGUI |RCTRL |         |  /   |  N0  |  .,  | RET/1|
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC   &kp Q     &kp W    &kp E   &kp R   &kp T     &kp LPAR  &kp RPAR     &kp EQUAL &kp Y     &kp U     &kp I   &kp O     &kp SEMI &kp BSPC &kp DEL       &kp KP_N7       &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp TAB   &kp A     &kp S    &kp D   &kp F   &kp G     &kp LBKT  &kp RBKT     &kp MINUS &kp H     &kp J     &kp K   &kp L     &kp P    &kp SQT  &kp BSLH      &kp KP_N4       &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&kp LSHFT &kp RSHFT &kp Z    &kp X   &kp C   &kp V     &kp B     &kp RET      &kp RET   &kp B     &kp N     &kp M   &kp COMMA &kp DOT  &kp FSLH &kp RSHFT     &kp KP_MULTIPLY &kp KP_N1 &kp KP_N2 &kp KP_N3
&kp LCTRL &kp LGUI  &kp LALT &mo LF3 &mo LF2 &kp SPACE &kp SPACE &mo LF1      &mo RF1   &kp SPACE &kp SPACE &mo LF2 &mo LF3   &kp RALT &kp RGUI &kp RCTRL     &kp KP_DIVIDE   &kp KP_N0 &td2      &lt LF1 RET
            >;
        };

		lf1_layer {
			display-name = "LF1";
// * LF1
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |  HO  |  UP  |  EN  |  7&  |  8*  |  9(  |  +*  |         |  +*  |  7&  |  8*  |  9(  |  HO  |  UP  | EN   | ESC  |         |  F7  |  F8  |  F9  |LCTRL |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | BSP  |  LE  |  DO  |  RI  |  4$  |  5%  |  6^  |  -/  |         |  -/  |  4$  |  5%  |  6^  |  LE  |  DO  | RI  | BSP  |          |  F4  |  F5  |  F6  | LAlt |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |LShift|RShift|  ,   |  .   |  0)  |  1!  |  2@  |  3#  |         |  ,   |  .   |  1!  |  2@  |  3#  |  0)  |LShift|RShift|         |LShift|  F1  |  F2  |  F3  |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL | CAP  | LAlt | LF3  | LF2  | SPC  | SPC  | LF1  |         | RF1  | SPC  | SPC  |  LF2 | LF3  | RAlt | RGUI |RCTRL |         | F10  | F11  | F12  |      |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC    &kp HOME  &kp UP    &kp END   &kp N7  &kp N8    &kp N9    &td0       &td0      &kp N7    &kp N8    &kp N9  &kp HOME &kp UP    &kp END   &kp ESC         &kp F7     &kp F8  &kp F9  &skq LCTRL
&kp BSPC   &kp LEFT  &kp DOWN  &kp RIGHT &kp N4  &kp N5    &kp N6    &td1       &td1      &kp N4    &kp N5    &kp N6  &kp LEFT &kp DOWN  &kp RIGHT &kp BSPC        &kp F4     &kp F5  &kp F6  &skq LALT
&skq LSHFT &kp RSHFT &kp COMMA &kp DOT   &kp N0  &kp N1    &kp N2    &kp N3     &kp COMMA &kp DOT   &kp N1    &kp N2  &kp N3   &kp N0    &kp LSHFT &skq RSHFT      &skq LSHFT &kp F1  &kp F2  &kp F3
&skq LCTRL &kp CAPS  &skq LALT &mo LF3   &mo LF2 &kp SPACE &kp SPACE &mo LF1    &mo RF1   &kp SPACE &kp SPACE &mo LF2 &mo LF3  &skq RALT &kp RGUI  &skq RCTRL      &kp F10    &kp F11 &kp F12 &trans
            >;
        };
        
		lf2_layer {
			display-name = "LF2";
// * LF2
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   |  !   |  @   |  #   |  $   |  F1  |  F2  |  F3  |  F4  |         |  F1  |  F2  |  F3  |  F4  |  !   |  @   |  #   |  $   |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     |  %   |  ^   |  &   |  *   |  F5  |  F6  |  F7  |  F8  |         |  F5  |  F6  |  F7  |  F8  |  %   |  ^   |  &   |  *   |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |      |      |  ~   |  `   |  F9  |  F10 |  F11 |  F12 |         |  F9  |  F10 |  F11 |  F12 |      |      |  ~   |  `   |         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL |LShift| LAlt | LF3  | LF2  | SPC  | SPC  | LF1  |         | RF1  | SPC  | SPC  |  LF2 | LF3  | RAlt |RShift|RCTRL |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp F1  &kp F2    &kp F3    &kp F4     &kp F1  &kp F2    &kp F3    &kp F4  &kp EXCL  &kp AT     &kp HASH   &kp DLLR       &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp F5  &kp F6    &kp F7    &kp F8     &kp F5  &kp F6    &kp F7    &kp F8  &kp PRCNT &kp CARET  &kp AMPS   &kp STAR       &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&none      &none      &kp TILDE &kp GRAVE &kp F9  &kp F10   &kp F11   &kp F12    &kp F9  &kp F10   &kp F11   &kp F12 &none     &none      &kp TILDE  &kp GRAVE      &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&skq LCTRL &skq LSHFT &skq LALT &mo LF3   &mo LF2 &kp SPACE &kp SPACE &mo LF1    &mo RF1 &kp SPACE &kp SPACE &mo LF2 &mo LF3   &skq RALT  &skq RSHFT &skq RCTRL     &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };
        
		lf3_layer {
			display-name = "LF3";
// * LF3
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |  N7  |  N8  |  N9  |  +   |  *   |  (   |  )   |         |  N7  |  N8  |  N9  |  +   |  *   |  (   |  )   | ESC  |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | BSP  |  N4  |  N5  |  N6  |  -   |  /   |  [{  |  ]}  |         |  N4  |  N5  |  N6  |  -   |  /   |  [{  |  ]}  | BSP  |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |LShift|  N0  |  N1  |  N2  |  N3  | .DEL |  ,   |NUMLOC|         |  N0  |  N1  |  N2  |  N3  | .DEL |  ,   |NUMLOC|RShift|         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL |LShift| LAlt | LF3  | LF2  | SPC  | SPC  | LOW  |         | RAI  | SPC  | SPC  |  LF2 | LF3  | RAlt |RShift|RCTRL |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC    &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS  &kp KP_MULTIPLY &kp KP_LPAR  &kp KP_RPAR    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_PLUS  &kp KP_MULTIPLY &kp KP_LPAR  &kp KP_LPAR &kp BSPC       &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp BSPC   &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS &kp KP_DIVIDE   &kp LBKT     &kp RBKT       &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MINUS &kp KP_DIVIDE   &kp LBKT     &kp RBKT    &kp BSPC       &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&kp LSHFT  &kp KP_N0  &kp KP_N1 &kp KP_N2 &kp KP_N3    &kp KP_DOT      &kp KP_COMMA &kp KP_NUM     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp N3       &kp KP_DOT      &kp KP_COMMA &kp KP_NUM  &kp RSHFT      &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&skq LCTRL &skq LSHFT &skq LALT &mo LF3   &mo LF2      &kp SPACE       &kp SPACE    &mo LF1        &mo RF1   &kp SPACE &kp SPACE &mo LF2      &mo LF3         &skq RALT    &skq RGUI   &skq RCTRL     &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };
        
        lf4_layer {
			display-name = "LF4";
// * LF4
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | MUTE | PLAY | VUP  | VDO  |SUNLO|SOFTOF| BTCLA| BTCL  |        | MUTE | PLAY | VUP  | VDO  |      |      | BTCLA| BTCL  |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | BASE |      |      |      | BTS0 | BTS1 | BTS2 | BTS3 |         |      |      |      |      | BTS0 | BTS1 | BTS2 | BTS3 |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |      |      |      |      | BTD0 | BTD1 | BTD2 | BTD3 |         |      |      |      |      | BTS0 | BTS1 | BTS2 | BTS3 |         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |      |      |      | LF3  | LF2  |      |      | GAME |         |      |      |      |  LF2 | LF3  |      |      | GAME |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp C_MUTE &kp C_PP &kp C_VOL_UP &kp C_VOL_DN &studio_unlock &soft_off     &bt BT_CLR_ALL &bt BT_CLR       &kp C_MUTE &kp C_PP &kp C_VOL_UP &kp C_VOL_DN &none         &none         &bt BT_CLR_ALL &bt BT_CLR        &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&to 0      &none    &none        &none        &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3     &none      &none    &none        &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3      &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&none      &none    &none        &none        &bt BT_DISC 0  &bt BT_DISC 1 &bt BT_DISC 2  &bt BT_DISC 3    &none      &none    &none        &none        &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2  &bt BT_DISC 3     &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&none      &none    &none        &mo LF3      &mo LF2        &none         &none          &to 9            &none      &none    &none        &mo LF3      &mo LF2       &none         &none          &to 9             &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };
        
		rf1_layer {
			display-name = "RF1";
// * RF1
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |  HO  |  UP  |  EN  |  7&  |  8*  |  9(  |  +*  |         |  +*  |  7&  |  8*  |  9(  |  HO  |  UP  | EN   | ESC  |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | BSP  |  LE  |  DO  |  RI  |  4$  |  5%  |  6^  |  -/  |         |  -/  |  4$  |  5%  |  6^  |  LE  |  DO  | RI  | BSP  |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |LShift|RShift|  ,   |  .   |  0)  |  1!  |  2@  |  3#  |         |  ,   |  .   |  1!  |  2@  |  3#  |  0)  |LShift|RShift|         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL | CAP  | LAlt | LF3  | LF2  | SPC  | SPC  | LF1  |         | RF1  | SPC  | SPC  |  LF2 | LF3  | RAlt | RGUI |RCTRL |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC   &kp HOME  &kp UP    &kp END   &kp N7  &kp N8    &kp N9    &td0       &td0      &kp N7    &kp N8    &kp N9  &kp HOME &kp UP   &kp END   &kp BSPC       &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp TAB   &kp LEFT  &kp DOWN  &kp RIGHT &kp N4  &kp N5    &kp N6    &td1       &td1      &kp N4    &kp N5    &kp N6  &kp LEFT &kp DOWN &kp RIGHT &kp RET        &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&kp LSHFT &kp RSHFT &kp COMMA &kp DOT   &kp N0  &kp N1    &kp N2    &kp N3     &kp COMMA &kp DOT   &kp N1    &kp N2  &kp N3   &kp N0   &kp LSHFT &kp RSHFT      &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&kp LCTRL &kp CAPS  &kp LALT  &mo LF3   &mo LF2 &kp SPACE &kp SPACE &mo LF1    &mo RF1   &kp SPACE &kp SPACE &mo LF2 &mo LF3  &kp RALT &kp RGUI  &kp RCTRL      &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };
        
		rf2_layer {
			display-name = "RF2";
// * RF2
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   |  !   |  @   |  #   |  $   |  F1  |  F2  |  F3  |  F4  |         |  F1  |  F2  |  F3  |  F4  |  !   |  @   |  #   |  $   |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     |  %   |  ^   |  &   |  *   |  F5  |  F6  |  F7  |  F8  |         |  F5  |  F6  |  F7  |  F8  |  %   |  ^   |  &   |  *   |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |      |      |  ~   |  `   |  F9  |  F10 |  F11 |  F12 |         |  F9  |  F10 |  F11 |  F12 |  !   |  !   |  ~   |  `   |         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL |LShift| LAlt | LF3  | LF2  | SPC  | SPC  | LF1  |         | RF1  | SPC  | SPC  |  LF2 | LF3  | RAlt |RShift|RCTRL |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp F1  &kp F2    &kp F3    &kp F4     &kp F1  &kp F2    &kp F3    &kp F4  &kp EXCL  &kp AT     &kp HASH   &kp DLLR       &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp F5  &kp F6    &kp F7    &kp F8     &kp F5  &kp F6    &kp F7    &kp F8  &kp PRCNT &kp CARET  &kp AMPS   &kp STAR       &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&none      &none      &kp TILDE &kp GRAVE &kp F9  &kp F10   &kp F11   &kp F12    &kp F9  &kp F10   &kp F11   &kp F12 &none     &none      &kp TILDE  &kp GRAVE      &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&skq LCTRL &skq LSHFT &skq LALT &mo LF3   &mo LF2 &kp SPACE &kp SPACE &mo LF1    &mo RF1 &kp SPACE &kp SPACE &mo LF2 &mo LF3   &skq RALT  &skq RSHFT &skq RCTRL     &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };
        
        rf3_layer {
			display-name = "RF3";
// * RF3
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |  N7  |  N8  |  N9  |  +   |  *   |  (   |  )   |         |  N7  |  N8  |  N9  |  +   |  *   |  (   |  )   | ESC  |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | BSP  |  N4  |  N5  |  N6  |  -   |  /   |  [{  |  ]}  |         |  N4  |  N5  |  N6  |  -   |  /   |  [{  |  ]}  | BSP  |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |LShift|  N0  |  N1  |  N2  |  N3  | .DEL |  ,   |NUMLOC|         |  N0  |  N1  |  N2  |  N3  | .DEL |  ,   |NUMLOC|RShift|         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL |LShift| LAlt | LF3  | LF2  | SPC  | SPC  | LOW  |         | RAI  | SPC  | SPC  |  LF2 | LF3  | RAlt |RShift|RCTRL |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC    &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS  &kp KP_MULTIPLY &kp KP_LPAR  &kp KP_RPAR    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_PLUS  &kp KP_MULTIPLY &kp KP_LPAR  &kp KP_LPAR &kp BSPC       &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp BSPC   &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS &kp KP_DIVIDE   &kp LBKT     &kp RBKT       &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MINUS &kp KP_DIVIDE   &kp LBKT     &kp RBKT    &kp BSPC       &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&kp LSHFT  &kp KP_N0  &kp KP_N1 &kp KP_N2 &kp KP_N3    &kp KP_DOT      &kp KP_COMMA &kp KP_NUM     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp N3       &kp KP_DOT      &kp KP_COMMA &kp KP_NUM  &kp RSHFT      &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&skq LCTRL &skq LSHFT &skq LALT &mo LF3   &mo LF2      &kp SPACE       &kp SPACE    &mo LF1        &mo RF1   &kp SPACE &kp SPACE &mo LF2      &mo LF3         &skq RALT    &skq RGUI   &skq RCTRL     &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };
		
		rf4_layer {
			display-name = "RF4";
// * RF4
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | MUTE | PLAY | VUP  | VDO  |      |      | BTCLA| BTCL |        | MUTE | PLAY | VUP  | VDO  |      |      | BTCLA| BTCL |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     |      |      |      |      | BTS0 | BTS1 | BTS2 | BTS3 |         |      |      |      |      | BTS0 | BTS1 | BTS2 | BTS3 |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |      |      |      |      | BTD0 | BTD1 | BTD2 | BTD3 |         |      |      |      |      | BTS0 | BTS1 | BTS2 | BTS3 |         |  N4  |  N5  |  N6  |  *   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |      |      |      | LF3  | LF2  |      |      | GAME |         | GAME1|      |      |  LF2 | LF3  |      |      | GAME |         | LF1  |  N0  |  N6  |  /   |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp C_MUTE &kp C_PP &kp C_VOL_UP &kp C_VOL_DN &none         &none         &bt BT_CLR_ALL &bt BT_CLR       &kp C_MUTE &kp C_PP &kp C_VOL_UP &kp C_VOL_DN &none         &none         &bt BT_CLR_ALL &bt BT_CLR        &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&none      &none    &none        &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3     &none      &none    &none        &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3      &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&none      &none    &none        &none        &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2  &bt BT_DISC 3    &none      &none    &none        &none        &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2  &bt BT_DISC 3     &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY
&none      &none    &none        &mo LF3      &mo LF2       &none         &none          &to 9            &none      &none    &none        &mo LF3      &mo LF2       &none         &none          &to 9             &mo LF1    &kp KP_N0 &kp DOT   &kp KP_DIVIDE
            >;
        };

        gam_layer {
        display-name = "GAM";
// * GAM
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |   Q  |   W  |   E  |   R  |   T  |  (   |  )   |         |  =+  |   Y  |   U  |   I  |   O  |  ;:  | BSP  | DEL  |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | TAB  |   A  |   S  |   D  |   F  |   G  |  [{  |  ]}  |         |  -_  |   H  |   J  |   K  |   L  |  P   |  '"  | \|   |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * |LShift|LCTRL |   Z  |   X  |   C  |   V  |   B  | ENT  |         |  9(  |  0)  |   N  |   M  |  ,<  |  .>  |  /?  |RShift|         |  *   |  N1  |  N2  |  N3  |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL | LGUI | LAlt | LF3  | LF2  | SPC  | SPC  | GAM2 |         |  1!  |  2@  |  3#  |  4$  |  5%  |  6^  |  7&  |  8*  |         |  /   |  N0  |  .,  | RET/1|
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC   &kp Q     &kp W    &kp E   &kp R   &kp T     &kp LPAR  &kp RPAR     &kp EQUAL &kp Y     &kp U     &kp I   &kp O     &kp SEMI &kp BSPC &kp DEL        &kp KP_N7       &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp TAB   &kp A     &kp S    &kp D   &kp F   &kp G     &kp LBKT  &kp RBKT     &kp MINUS &kp H     &kp J     &kp K   &kp L     &kp P    &kp SQT  &kp BSLH       &kp KP_N4       &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&kp LSHFT &kp RSHFT &kp Z    &kp X   &kp C   &kp V     &kp B     &kp RET      &kp N9    &kp N0    &kp N     &kp M   &kp COMMA &kp DOT  &kp FSLH &kp RSHFT      &kp KP_MULTIPLY &kp KP_N1 &kp KP_N2 &kp KP_N3
&kp LCTRL &kp LGUI  &kp LALT &mo LF3 &mo LF2 &kp SPACE &kp SPACE &mo gam2     &kp N1    &kp N2    &kp N3    &kp N4  &kp N5    &kp N6   &kp N7   &kp N8         &kp KP_DIVIDE   &kp KP_N0 &td2      &lt LF1 RET
            >;
        };

        gam2_layer {
        display-name = "GAM2";
// * GAM2
// * |---------------------------------------------------------|       |---------------------------------------------------------|       |-----------------------------|
// *   | ESC  |      |  UP  |      |  N7  |  N8  |  N9  |  +-  |         |      |      |      |      |      |      |      |      |         |  N7  |  N8  |  N9  |  +   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// *     | BSP  |  LE  |  DO  |  RI  |  N4  |  N5  |  N6  |  */  |         |      |      |      |      |      |      |      |      |         |  N4  |  N5  |  N6  |  -   |
// * |-----------------------------------------------------------|     |-----------------------------------------------------------|     |-------------------------------|
// * | BASE | NUML |      |  .   |  N0  |  N1  |  N2  |  N3  |         |  F9  |  F10 |  F11 |  F12 |      |      |      |      |         |  *   |  N1  |  N2  |  N3  |
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// * |LCTRL | LGUI | LAlt | LF3  | LF2  | SPC  | SPC  | GAM2 |         |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |         |  /   |  N0  |  .,  | RET/1|
// * |-------------------------------------------------------|         |-------------------------------------------------------|         |---------------------------|
// */
            bindings = <
&kp ESC   &none      &kp UP   &none     &kp KP_N7 &kp KP_N8 &kp KP_N9 &td0         &none     &none     &none     &none   &none     &none    &none    &none          &kp KP_N7       &kp KP_N8 &kp KP_N9 &kp KP_PLUS
&kp BSPC  &kp LEFT   &kp DOWN &kp RIGHT &kp KP_N4 &kp KP_N5 &kp KP_N6 &td1         &none     &none     &none     &none   &none     &none    &none    &none          &kp KP_N4       &kp KP_N5 &kp KP_N6 &kp KP_MINUS
&to 0     &kp KP_NUM &none    &kp DOT   &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N3    &kp F9    &kp F10   &kp F11   &kp F12 &none     &none    &none    &none          &kp KP_MULTIPLY &kp KP_N1 &kp KP_N2 &kp KP_N3
&kp LCTRL &kp LGUI   &kp LALT &mo LF3   &mo LF2   &kp SPACE &kp SPACE &mo gam2     &kp F1    &kp F2    &kp F3    &kp F4  &kp F5    &kp F6   &kp F7   &kp F8         &kp KP_DIVIDE   &kp KP_N0 &td2      &lt LF1 RET
            >;
        };
        
        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };
    };
};
